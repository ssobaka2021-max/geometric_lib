name: Run Unit Tests

on:
  push:
    branches: [ "**" ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Find exact test error
      run: |
        echo "=== Testing each test method separately ==="
        python -c "
        from circle import area, perimeter
        import math
        
        # Test 1: Normal area
        try:
            result = area(5)
            expected = math.pi * 25
            print(f'Area test: {result} vs {expected}')
            assert abs(result - expected) < 0.0001
            print('✓ Area normal: PASS')
        except Exception as e:
            print(f'✗ Area normal: FAIL - {e}')
        
        # Test 2: Zero area
        try:
            result = area(0)
            print(f'Zero area: {result}')
            assert result == 0
            print('✓ Zero area: PASS')
        except Exception as e:
            print(f'✗ Zero area: FAIL - {e}')
        
        # Test 3: Negative area
        try:
            area(-5)
            print('✗ Negative area: FAIL - Should raise ValueError')
        except ValueError:
            print('✓ Negative area: PASS')
        except Exception as e:
            print(f'✗ Negative area: FAIL - {e}')
        "
    
    - name: Run single test method
      run: |
        python -m unittest tests.test_circle.CircleTestCase.test_circle_area_normal -v
        python -m unittest tests.test_circle.CircleTestCase.test_circle_area_zero -v
        python -m unittest tests.test_circle.CircleTestCase.test_circle_area_negative -v
